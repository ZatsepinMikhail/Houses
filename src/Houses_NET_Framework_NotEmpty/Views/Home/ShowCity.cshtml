@{
    ViewData["Title"] = ViewData["city"];
    string lat = ViewData["lat"] as string;
    string lng = ViewData["lng"] as string;
    string first_year = ViewData["first_year"] as string;
    string lats = ViewData["lats"] as string;
    string lngs = ViewData["lngs"] as string;
    string years = ViewData["years"] as string;
}

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Houses</title>
    <div id="legend"></div>
    <script type="text/javascript">
        var markerArray = [];
        var infoWindowArray = [];
        var years = @years;
        var lats = @lats;
        var lngs = @lngs;
        var map;

        var maxYear = 2016;
        var minYear = @first_year;

        var currentFromYear = -1;
        var currentToYear = -1;

        //empty range; set in control
        var newFromYear = minYear;
        var newToYear = maxYear;

        var colors = ['#a50000', '#eaa400', '#f2ff00', '#5bc400', '#006032', '#009b86', '#150091', '#4a0060', '#96007a'];

        function getColor(year) {
            //years 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010
            return colors[Math.floor((year - 1930) / 10)];
        }

        function createLegend() {
            var legend = document.getElementById('legend');
            var year = 1930;
            for (var color in colors) {
                var icon = "https://maps.gstatic.com/mapfiles/transparent.png";
                var divColor = document.createElement('div');
                divColor.innerHTML = '<div style="width: 10px; height: 10px; background-color:' + colors[color] + '; border: 1px; top: 1px;"> ';
                legend.appendChild(divColor);
                var divText = document.createElement('div');
                var nextYear = year + 10;
                var str = year.toString() + ' - ' + nextYear.toString();
                divText.innerHTML = '<div>' + str;
                divColor.appendChild(divText);
                year += 10;
            }
        
        }

        function onMarkerClick() {
            for (var i = 0; i < markerArray.length; i++)
                for (var j = 0; j < markerArray[i].length; j++)
                    if (this === markerArray[i][j])
                    {
                        var year = i + minYear;
                        var contentString = '<div>'+
                        year.toString() +
                        '</div>';
                        var infoWindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        infoWindow.open(map, this);
                    }   
        }

        function initialize() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: parseFloat(@lat), lng: parseFloat(@lng) },
                scrollwheel: true,
                zoom: 13
            });
            map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push
                (document.getElementById('legend'));
            createLegend();
            document.getElementById("fromYear").innerHTML = minYear;
            document.getElementById("toYear").innerHTML = maxYear;

            for (var yearProcessed = minYear; yearProcessed <= maxYear; ++yearProcessed) {
                markerArray.push([]);
            }
            for (var index = 0; index < lats.length; ++index) {
                yearIndex = years[index] - minYear;

                //console.log(yearIndex, years[index]);

                var coords = { lat: lats[index], lng: lngs[index] };
                var marker = new google.maps.Marker({
                    icon: {
                        path: google.maps.SymbolPath.CIRCLE,
                        fillOpacity: 0.5,
                        fillColor: getColor(years[index]),
                        strokeOpacity: 0.5,
                        strokeColor: '#000000',
                        strokeWeight: 1.0,
                        scale: 4
                    },
                    position: coords,
                    map: map,
                    visible: false,
                });
                
                marker.addListener('click', onMarkerClick);
                markerArray[yearIndex].push(marker);
            }
        }

        function onClick() {

            var previousFromYear = currentFromYear;
            var previousToYear = currentToYear;
            
            currentFromYear = newFromYear;
            currentToYear = newToYear;

            var rangesHide = [];
            var rangesShow = [];

            console.log(previousFromYear);
            console.log(previousToYear);
            console.log(currentFromYear);
            console.log(currentToYear);

            if (previousFromYear == -1 && previousToYear == -1) {
                rangesShow.push([currentFromYear, currentToYear]);
            } else if (previousFromYear == currentFromYear) {
                if (previousToYear <= currentToYear) {
                    rangesShow.push([previousToYear + 1, currentToYear]);
                }
                else {
                    rangesHide.push([currentToYear + 1, previousToYear]);
                }
            } else if (previousToYear == currentToYear) {
                if (previousFromYear >= currentFromYear) {
                    rangesShow.push([currentFromYear, previousFromYear - 1]);
                }
                else {
                    rangesHide.push([previousFromYear, currentFromYear - 1]);
                }

            //no intersection: 1234, 3412
            } else if (previousFromYear > currentToYear || previousToYear < currentFromYear) {
                rangesHide.push([previousFromYear, previousToYear]);
                rangesShow.push([currentFromYear, currentToYear]);
            //...
            } else if (currentFromYear <= previousToYear) {
                if (currentFromYear <= previousFromYear) {
                    //3142
                    if (currentToYear <= previousToYear) {
                        rangesShow.push([currentFromYear, previousFromYear - 1]);
                        rangesHide.push([currentToYear + 1, previousToYear]);
                    //3124
                    } else {
                        rangesShow.push([currentFromYear, previousFromYear - 1]);
                        rangesShow.push([previousToYear + 1, currentToYear]);                    
                    }
                } else {
                    //1342
                    if (currentToYear <= previousToYear) {
                        rangesHide.push([previousFromYear, currentFromYear -1]);
                        rangesHide.push([currentToYear + 1, previousToYear]);
                    //1324
                    } else {
                        rangesHide.push([previousFromYear, currentFromYear - 1]);
                        rangesShow.push([previousToYear + 1, currentToYear]);
                    }
                }
            }

            for (var rangeIndex = 0; rangeIndex < rangesHide.length; ++rangeIndex) {
                var fromYear = rangesHide[rangeIndex][0];
                var toYear = rangesHide[rangeIndex][1];

                for (var year = fromYear; year <= toYear; ++year) {
                    yearIndex = year - minYear;
                    console.log('fromYear =', fromYear);
                    console.log('toYear =', toYear);
                    console.log('yearIndex =', yearIndex);
                    for (var i = 0, l = markerArray[yearIndex].length; i < l; ++i) {
                        var marker = markerArray[yearIndex][i];
                        marker.setVisible(false);
                    }
                }
            }

            for (var rangeIndex = 0; rangeIndex < rangesShow.length; ++rangeIndex) {
                var fromYear = rangesShow[rangeIndex][0];
                var toYear = rangesShow[rangeIndex][1];

                for (var year = fromYear; year <= toYear; ++year) {

                    console.log('yearIndex =', yearIndex);
                    yearIndex = year - minYear;
                    for (var i = 0, l = markerArray[yearIndex].length; i < l; ++i) {
                        var marker = markerArray[yearIndex][i];
                        marker.setVisible(true);
                    }
                }
            }
        }

    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD0YOF3byJvtJlfR6_2woTLNGmHlQKPueY&callback=initialize"
            async defer></script>

    <link rel="stylesheet" href="~/css/multirange.css">
    <style> 
        form {
            position: relative;
        }
        input[type="range"] {
            width: 100%;
        }   
        #legend {
            font-family: Arial, sans-serif;
            background: #fff;
            padding: 10px;
            margin: 10px;
            border: 3px solid #000;
        }
    </style>
    <script type="text/javascript" src="~/js/outputscript.js"></script>

</head>
<body>

    <form id="form1" runat="server">
        <div>
            <div id="map" style="width:100%;height:500px"></div>
        </div>
    </form>
    <form>
        <input id="rangeElement" type="range" multiple value="0,100"/>
        <output id="fromYear">minYear</output>
        <output id="toYear">maxYear</output>
        <button type="button" onclick="onClick()">Show!</button>
    </form>
    <script type="text/javascript" src="~/js/multirange.js"></script>
    <script>
        function ready() {
            var list = document.getElementsByClassName("multirange");
            for (var i = 0; i < list.length; i+=1) {
                element = list[i];
                console.log(element);
                element.addEventListener("input", updateTextInput);
            }  
            document.getElementById("fromYear").innerHTML = minYear;
            document.getElementById("toYear").innerHTML = maxYear;
        }
        document.addEventListener("DOMContentLoaded", ready);
    </script>
    
</body>
</html>